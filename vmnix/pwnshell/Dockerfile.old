FROM ubuntu as ubuntu-nix

RUN apt-get update && apt-get install -y wget tar xz-utils && rm -rf /var/lib/apt/lists/*

ARG NIX_VERSION=2.5.1
RUN wget https://nixos.org/releases/nix/nix-${NIX_VERSION}/nix-${NIX_VERSION}-$(uname -m)-linux.tar.xz \
  && tar xf nix-${NIX_VERSION}-$(uname -m)-linux.tar.xz \
  && addgroup --gid 30000 --system nixbld \
  && for i in $(seq 1 30); do adduser --system --disabled-password --no-create-home --home /var/empty --gecos "Nix build user $i" --uid $((30000 + i)) --ingroup nixbld nixbld$i ; adduser nixbld$i nixbld; done \
  && mkdir -m 0755 /etc/nix \
  && echo 'sandbox = false' > /etc/nix/nix.conf \
  && mkdir -m 0755 /nix && USER=root sh nix-${NIX_VERSION}-$(uname -m)-linux/install \
  && ln -s /nix/var/nix/profiles/default/etc/profile.d/nix.sh /etc/profile.d/ \
  && rm -r /nix-${NIX_VERSION}-$(uname -m)-linux* \
  && rm -rf /var/cache/apk/* \
  && /nix/var/nix/profiles/default/bin/nix-collect-garbage --delete-old \
  && /nix/var/nix/profiles/default/bin/nix-store --optimise \
  && /nix/var/nix/profiles/default/bin/nix-store --verify --check-contents

ENV \
    ENV=/etc/profile \
    USER=root \
    PATH=/nix/var/nix/profiles/default/bin:/nix/var/nix/profiles/default/sbin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin \
    GIT_SSL_CAINFO=/etc/ssl/certs/ca-certificates.crt \
    NIX_SSL_CERT_FILE=/etc/ssl/certs/ca-certificates.crt \
    NIX_PATH=/nix/var/nix/profiles/per-user/root/channels


FROM ubuntu-nix as devtools
RUN apt-get update -y
RUN apt-get install libc6-i386 -y

RUN nix-channel --add https://github.com/NixOS/nixpkgs/archive/master.tar.gz nixpkgs
RUN nix-channel --add https://github.com/nix-community/home-manager/archive/master.tar.gz home-manager
RUN nix-channel --update
COPY *.nix /tmp/
RUN nix-shell /tmp/shell.nix



#RUN nix-env -i pwndbg
#RUN nix-env -i python3
#RUN nix-env -i binutils  # objdump etc
#RUN nix-env -i zsh
#RUN nix-env -i tmux
#RUN nix-env -f "<nixpkgs>" -i -E "f: (f {}).python3.withPackages(ps: with ps; [ pwntools ipython ])"
#RUN nix-env -i file
#RUN nix-env -i gdb  # gdbserver
#RUN nix-env -i gcc
#RUN rm /nix/var/nix/profiles/default/bin/pwntools-gdb && ln -s /nix/store/0va6cr3cbhcdzllaspy4ik2cf5020gbb-pwndbg-2021.06.22/bin/pwndbg /nix/var/nix/profiles/default/bin/pwntools-gdb

# TODO: install rpyc in pwndbg
#

# RUN nix-env -iA nixpkgs.pkgs.python3Packages.requests

# nix-env -f "<nixpkgs>" -i -E "f: (f {}).python3.withPackages(ps: with ps; [ requests ])"

# https://github.com/Mic92/nix-ld
# https://github.com/bennofs/nix-index
# https://superuser.com/questions/912389/how-do-i-install-the-32-bit-dynamic-linker-on-64-bit-nixos
# apt-get install libc6-i386

# bash-4.4# ls -al ~
#total 16
#drwxr-xr-x 3 root root 4096 Jan  1  1980 .
#drwxr-xr-x 1 root root 4096 Dec 22 03:52 ..
#lrwxrwxrwx 1 root root   74 Jan  1  1980 .nix-channels -> /nix/store/38a0bg2bnrl3mxl4388vsfwvy7gksj2q-base-system/root/.nix-channels
#drwxr-xr-x 2 root root 4096 Jan  1  1980 .nix-defexpr
#lrwxrwxrwx 1 root root   29 Jan  1  1980 .nix-profile -> /nix/var/nix/profiles/default
#bash-4.4#
#bash-4.4# export
#declare -x GIT_SSL_CAINFO="/nix/var/nix/profiles/default/etc/ssl/certs/ca-bundle.crt"
#declare -x MANPATH="/root/.nix-profile/share/man:/nix/var/nix/profiles/default/share/man"
#declare -x NIX_PATH="/nix/var/nix/profiles/per-user/root/channels:/root/.nix-defexpr/channels"
#declare -x NIX_SSL_CERT_FILE="/nix/var/nix/profiles/default/etc/ssl/certs/ca-bundle.crt"
#declare -x PATH="/root/.nix-profile/bin:/nix/var/nix/profiles/default/bin:/nix/var/nix/profiles/default/sbin"
#declare -x SSL_CERT_FILE="/nix/var/nix/profiles/default/etc/ssl/certs/ca-bundle.crt"

# https://github.com/FRidh/python-on-nix/blob/master/tutorial.md
# https://github.com/NixOS/nixpkgs/blob/master/doc/languages-frameworks/python.section.md
# $ nix-shell -p "python3.withPackages (p: with p; [ pwntools ])" --run python
#>>> from pwn import *; shellcode = asm(['mov rax, rbx'], arch='aarch64')

# nix-shell -p 'python38.withPackages(ps: with ps; [ numpy toolz requests ])' --run python3

#!/usr/bin/env nix-shell
#!nix-shell -i python3 -p "python3.withPackages(ps: with ps; [ requests ])"

# nix-env -qa '.*numpy.*'

#FROM ubuntu
#COPY --from=devtools /nix /nix
#ENV NIX_PATH="/nix/var/nix/profiles/default/bin:/nix/var/nix/profiles/default/sbin"
#ENV PATH="$PATH:$NIX_PATH"

